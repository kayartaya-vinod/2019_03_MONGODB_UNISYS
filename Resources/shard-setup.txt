# folders for config servers

mkdir cfgsvr
mkdir shard1
mkdir shard2
mkdir shard3

mkdir cfgsvr/member1
mkdir cfgsvr/member2
mkdir cfgsvr/member3

mkdir shard1/member1
mkdir shard1/member2
mkdir shard1/member3

mkdir shard2/member1
mkdir shard2/member2
mkdir shard2/member3

mkdir shard3/member1
mkdir shard3/member2
mkdir shard3/member3

mongod --configsvr --replSet cfg --port 26000 --dbpath cfgsvr/member1 --bind_ip localhost,192.168.31.78
mongod --configsvr --replSet cfg --port 26001 --dbpath cfgsvr/member2 --bind_ip localhost,192.168.31.78
mongod --configsvr --replSet cfg --port 26002 --dbpath cfgsvr/member3 --bind_ip localhost,192.168.31.78

# from the mongo shell, run the rs.initiate() as shown in the example below:
# mongo --host 192.168.31.78 --port 26000
# use admin
# rs.initiate(
#   {
#     _id: "cfg",
#     configsvr: true,
#     members: [
#       { _id : 0, host : "192.168.31.78:26000" },
#       { _id : 1, host : "192.168.31.78:26001" },
#       { _id : 2, host : "192.168.31.78:26002" }
#     ]
#   }
# )

# start the shards
# shard-a

mongod  --shardsvr --replSet shard1rs --port 27000 --dbpath shard1/member1 --bind_ip localhost,192.168.31.78
mongod  --shardsvr --replSet shard1rs --port 27001 --dbpath shard1/member2 --bind_ip localhost,192.168.31.78
mongod  --shardsvr --replSet shard1rs --port 27002 --dbpath shard1/member3 --bind_ip localhost,192.168.31.78

# from the mongo shell, run the rs.initiate() as shown in the example below:
# mongo --host 192.168.31.78 --port 27000
# use admin
# rs.initiate(
#   {
#     _id: "shard1rs",
#     members: [
#       { _id : 0, host : "192.168.31.78:27000" },
#       { _id : 1, host : "192.168.31.78:27001" },
#       { _id : 2, host : "192.168.31.78:27002" }
#     ]
#   }
# )

mongod  --shardsvr --replSet shard2rs --port 27100 --dbpath shard2/member1 --bind_ip localhost,192.168.31.78
mongod  --shardsvr --replSet shard2rs --port 27101 --dbpath shard2/member2 --bind_ip localhost,192.168.31.78
mongod  --shardsvr --replSet shard2rs --port 27102 --dbpath shard2/member3 --bind_ip localhost,192.168.31.78

# from the mongo shell, run the rs.initiate() as shown in the example below:
# mongo --host 192.168.31.78 --port 27100
# use admin
# rs.initiate(
#   {
#     _id: "shard2rs",
#     members: [
#       { _id : 0, host : "192.168.31.78:27100" },
#       { _id : 1, host : "192.168.31.78:27101" },
#       { _id : 2, host : "192.168.31.78:27102" }
#     ]
#   }
# )

mongod  --shardsvr --replSet shard3rs --port 27200 --dbpath shard3/member1 --bind_ip localhost,192.168.31.78
mongod  --shardsvr --replSet shard3rs --port 27201 --dbpath shard3/member2 --bind_ip localhost,192.168.31.78
mongod  --shardsvr --replSet shard3rs --port 27202 --dbpath shard3/member3 --bind_ip localhost,192.168.31.78

# from the mongo shell, run the rs.initiate() as shown in the example below:
# mongo --host 192.168.31.78 --port 27200
# use admin
# rs.initiate(
#   {
#     _id: "shard3rs",
#     members: [
#       { _id : 0, host : "192.168.31.78:27200" },
#       { _id : 1, host : "192.168.31.78:27201" },
#       { _id : 2, host : "192.168.31.78:27202" }
#     ]
#   }
# )


mongos --configdb cfg/192.168.31.78:26000,192.168.31.78:26001,192.168.31.78:26002 --bind_ip localhost,192.168.31.78

# connect to mongos router using a mongo shell
# mongo --host 192.168.31.78 admin

sh.addShard( "a/192.168.31.78:27000")
sh.addShard( "b/192.168.31.78:27100")
sh.addShard( "c/192.168.31.78:27200")

# enable shard on a database
sh.enableSharding("unisysdb")

# Shard a Collection using Hashed ShardingÂ¶
sh.shardCollection("unisysdb.customers", { _id : "hashed" } )
